# Database Connection
spring.datasource.url=jdbc:mysql://localhost:3306/SPRING_JPA_TRAINING_VER1?serverTimezone=Asia/Seoul&useSSL=false
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# View Path
#spring.thymeleaf.prefix=classpath:/templates/ 
#spring.thymeleaf.suffix=.html


# Hibernate는 애플리케이션을 시작할 때 데이터베이스 스키마를 자동으로 업데이트한다. 
# 이는 엔티티 클래스에 대한 변경 사항(새로운 엔티티 추가, 기존 엔티티의 필드 추가/삭제/변경 등)이 있을 경우, 해당 변경 사항을 데이터베이스 스키마에 반영할 수 있다.

# none: 데이터베이스 스키마를 자동으로 생성하지 않는다.
# create: 애플리케이션을 실행할 때마다 데이터베이스 스키마를 새로 생성한다.
# create-drop: create와 유사하게 애플리케이션 시작 시 데이터베이스 스키마를 생성하지만 애플리케이션이 종료될 때 생성된 테이블을 모두 삭제한다.
# update: 애플리케이션 실행 시 데이터베이스 스키마를 업데이트한다.
# validate: 애플리케이션 실행 시 엔티티와 테이블이 올바르게 매핑되었는지 검증만 수행하고 데이터베이스 스키마는 변경하지 않는다.

spring.jpa.hibernate.ddl-auto=update


#Hibernate가 구현한 SQL을 console환경에서 조회한다.
spring.jpa.properties.hibernate.show_sql=true

#SQL을 가독성 좋게 들여쓰기가 정렬된 형태로 조회한다.
spring.jpa.properties.hibernate.format_sql=true


# 기본적으로 spring boot에는 open in view패턴이 활성화 되어있다. 
# 이는 EntityManager가 HTTP요청이 시작되며 끝날때까지 활성화되어 있어서 성능문제, 지연로딩,리소스관리 문제가 발생할 수 있다.
spring.jpa.open-in-view=false

