<?xml version="1.0" encoding="UTF-8"?>
<configuration>

	<!-- 
    
    	[로깅 출력 패턴]
	
    		- 로깅 출력 패턴을 변경하여 적용 가능하다.
    		
		    1) %d{yyyy-MM-dd HH:mm:ss}: 로그 이벤트의 발생 시간을 날짜 및 시간 형식으로 출력한다.
			2) [%thread]: 현재 스레드의 이름을 출력한다.
			3) %-5level: 로그 레벨을 5자리로 출력하며, 왼쪽 정렬된다.
			4) %logger{36}: 로그 이벤트를 발생시킨 로거의 이름을 36자로 제한하여 출력한다.
			5) %msg%n: 로그 메시지와 개행 문자를 출력한다.
    
     -->

    <!-- 콘솔로깅 appender -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>  <!-- 로깅 패턴 -->
        </encoder>
    </appender>
    
    
    <!-- 로그 파일 경로 -->
    <property name="LOG_PATH" value="${user.home}/logs/test.log"/>
    
    <!-- 파일 로깅 appender (DailyRollingFileAppender )-->
    <appender name="DAILY_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}</file>													  <!-- 로그파일 경로 및 이름 설정 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>app.log.%d{yyyy-MM-dd}.log</fileNamePattern>             <!-- 파일 이름 패턴 설정 -->
        </rollingPolicy>
        <encoder>
            <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>  <!-- 로깅 패턴 -->
        </encoder>
    </appender>

    <!-- application 기본설정 -->
    <root level="INFO"> 
        <appender-ref ref="CONSOLE"/> 					<!-- 콘솔환경에 로깅 구현 -->
        <appender-ref ref="DAILY_FILE"/> 				<!-- 파일환경에 로깅 구현 -->
    </root>

	 <!--  
    
    	- Spring Boot에 관련된 로깅은 application.properties설정파일에 아래의 속성을 추가하여 설정할 수 있다.
    	
    	# 애플리케이션 전체에 대한 기본 로깅
		logging.level.root=info
		
		# 스프링프레임워크의 내부 동작에 대한 로깅
		logging.level.org.springframework=info
		
		# 특정 클래스에 대한 별도의 로깅 (logging.level.특정패키지.특정클래스명=로깅레벨)
		logging.level.com.spring.aop.log.LoggerAdvice=info
		
    -->

</configuration>
