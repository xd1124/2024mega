<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.application.trainingVer2.boardAdvance.dao.BoardAdvanceDAO">

	<select id="getAllBoardCnt" parameterType="hashmap" resultType="int">
		<choose>
			<when test='searchKeyword.equals("total")'>
				<choose>
					<when test='searchWord.equals("")'>
						SELECT 
								COUNT(*) 
						FROM 
								MAIN_BOARD
					</when>
					<otherwise>
						SELECT 
								COUNT(*) 
						FROM 
								MAIN_BOARD
						WHERE
								SUBJECT LIKE CONCAT('%',#{searchWord},'%') OR 
								WRITER LIKE CONCAT('%',#{searchWord},'%')
					</otherwise>
				</choose>
			</when>
			<otherwise>
				SELECT 
						COUNT(*) 
				FROM 
						MAIN_BOARD 
				WHERE
					<if test='searchKeyword.equals("writer")'>
						WRITER LIKE CONCAT('%' , #{searchWord} , '%')
					</if>
					<if test='searchKeyword.equals("subject")'>
						SUBJECT LIKE CONCAT('%' , #{searchWord} , '%')
					</if>
			</otherwise>
		</choose>	
	</select>

	
	<select id="getBoardList" parameterType="hashmap" resultType="MainBoardDTO">
		<choose>
			<when test='searchKeyword.equals("total")'>
				<choose>
					<when test='searchWord.equals("")'>
						SELECT
								*
						FROM
								MAIN_BOARD
						ORDER BY
								ENROLL_AT DESC
						LIMIT 
								#{startBoardIdx},#{onePageViewCnt}
					</when>
					<otherwise>
						SELECT 
								*
						FROM
								MAIN_BOARD
						WHERE
								SUBJECT LIKE CONCAT('%' , #{searchWord} , '%') OR
								WRITER LIKE CONCAT('%' , #{searchWord} , '%')
						ORDER BY
								ENROLL_AT DESC
						LIMIT 
								#{startBoardIdx},#{onePageViewCnt}
					</otherwise>
				</choose>
			</when>
			<otherwise>
				SELECT
						*
				FROM
						MAIN_BOARD
				WHERE
					<if test='searchKeyword.equals("writer")'>
						WRITER LIKE CONCAT('%' , #{searchWord} , '%')
					</if>
					<if test='searchKeyword.equals("subject")'>
						SUBJECT LIKE CONCAT('%' , #{searchWord} , '%')
					</if>
				ORDER BY
						ENROLL_AT DESC
				LIMIT
						#{startBoardIdx} , #{onePageViewCnt}
			</otherwise>
		</choose>
	</select>
	
	
	<select id="getBoardDetail" parameterType="long" resultType="MainBoardDTO">
		SELECT
				*
		FROM
				MAIN_BOARD
		WHERE
				BOARD_ID = #{boardId}
	</select>
	
	
	<update id="updateReadCnt" parameterType="long">
		UPDATE
				MAIN_BOARD
		SET
				READ_CNT = READ_CNT + 1
		WHERE
				BOARD_ID = #{boardId}
	</update>
	
	
	<insert id="createBoard" parameterType="MainBoardDTO">
		INSERT INTO MAIN_BOARD (
				WRITER,
				SUBJECT,
				CONTENT,
				PASSWD
		)
		VALUES (
				#{writer},
				#{subject},
				#{content},
				#{passwd}
		)
	</insert>

	
	<update id="updateBoard" parameterType="MainBoardDTO">
		UPDATE 
				MAIN_BOARD 
		SET 
				WRITER	= #{writer},
				SUBJECT = #{subject}, 
				CONTENT = #{content},
				ENROLL_AT = NOW()
		WHERE 
				BOARD_ID = #{boardId}
	</update>
	
	
	<delete id="deleteBoard" parameterType="long">
		DELETE FROM 
				MAIN_BOARD 
		WHERE 
				BOARD_ID = #{boardId}
	</delete>
	
	
	<select id="getPasswd" parameterType="long" resultType="String">
		SELECT
				PASSWD AS passwd
		FROM
				MAIN_BOARD
		WHERE
				BOARD_ID = #{boardId}
	</select>
	
	
	<insert id="createBoardDummy">
		INSERT INTO MAIN_BOARD (
				WRITER,
				SUBJECT,
				CONTENT,
				PASSWD
		)
		VALUES
		<foreach collection="list" item="mainBoardDTO" separator=",">
			(
				#{mainBoardDTO.writer}, 
				#{mainBoardDTO.subject}, 
				#{mainBoardDTO.content}, 
				#{mainBoardDTO.passwd} 
			)
		</foreach>
	</insert>
	
	<select id="getReplyCnt" parameterType="long" resultType="int">
		SELECT 
				COUNT(*) 
		FROM 
				REPLY
		WHERE
				BOARD_ID = #{boardId}
	</select>

	
	<select id="getReplyList" parameterType="long" resultType="ReplyDTO">
		SELECT 
				* 
		FROM 
				REPLY
		WHERE
				BOARD_ID = #{boardId}
	</select>

	
	<select id="getReplyDetail" parameterType="long" resultType="ReplyDTO">
		SELECT
				*
		FROM
				REPLY
		WHERE
				REPLY_ID = #{replyId}
	</select>
	
	
	<insert id="createReply" parameterType="ReplyDTO">
		INSERT INTO REPLY (
				WRITER,
				CONTENT,
				PASSWD,
				BOARD_ID
		)
		VALUES (
				#{writer},
				#{content},
				#{passwd},
				#{boardId}
		)
	</insert>
 
 	
	<update id="updateReply" parameterType="ReplyDTO">
		UPDATE 
				REPLY 
		SET 
				WRITER	= #{writer},
				CONTENT = #{content},
				ENROLL_AT = NOW()
		WHERE 
				REPLY_ID = #{replyId}
	</update>
	
	
	<delete id="deleteReply" parameterType="long">
		DELETE FROM 
				REPLY 
		WHERE 
				REPLY_ID = #{replyId}
	</delete>
	
	
	<select id="validateReplyUserCheck"  parameterType="long" resultType="String">
		SELECT
				PASSWD AS passwd
		FROM
				REPLY
		WHERE
				REPLY_ID = #{replyId}
	</select>
	
	<select id="getTodayEnrolledBoardCnt" parameterType="String" resultType="int">
		SELECT
				COUNT(BOARD_ID)
		FROM
				MAIN_BOARD
		WHERE
				LEFT(ENROLL_AT , 10) = #{today}
	</select>
	
	<select id="getTodayEnrolledReplyCnt" parameterType="String" resultType="int">
		SELECT
				COUNT(BOARD_ID)
		FROM
				REPLY
		WHERE
				LEFT(ENROLL_AT , 10) = #{today}
	</select>
	

 </mapper>